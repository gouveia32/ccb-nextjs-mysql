// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  medicoId             String
  providerType       String
  providerId         String
  providerAccountId  Int
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  medico               Medico      @relation(fields: [medicoId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  medicoId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  medico         Medico     @relation(fields: [medicoId], references: [id])
}

model Medico {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  notes Note[]
  pacientes Paciente[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}



model Note {
  id  String @default(cuid()) @id
  name String
  noteType String @default("TEXT")
  content String
  color String
  pinned Boolean
  createdAt DateTime @default(now())
  pacientes Paciente[]
  checkPoints CheckPoint[]
  medico Medico @relation(fields: [medicoId], references: [id])
  medicoId String
}

model Paciente {
  id String @default(cuid()) @id
  name String
  createdAt DateTime @default(now())
  notes Note[]
  medico Medico @relation(fields: [medicoId], references: [id])
  medicoId String
}

model CheckPoint {
  id String @default(cuid()) @id
  text String
  checked Boolean
  note Note @relation(fields: [noteId], references: [id])
  noteId String
}






//model Paciente2 {
//  id              Int        @id @default(autoincrement())
//  nome            String
//  cpf             String?
//  email           String?
//  data_nascimento DateTime? 
//  data_cadastro   DateTime?  @default(now())
//  peso            Int
//  altura          Int
//  tipo_sanguineo  String
//  status          Int        @default(1)
//}
