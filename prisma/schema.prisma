// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./notes-db.db"
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  Int
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  notes Note[]
  tags Tag[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}



model Note {
  id  String @default(cuid()) @id
  name String
  noteType String @default("TEXT")
  content String
  color String
  pinned Boolean
  createdAt DateTime @default(now())
  tags Tag[]
  checkPoints CheckPoint[]
  user User @relation(fields: [userId], references: [id])
  userId String
}

model Tag {
  id String @default(cuid()) @id
  name String
  createdAt DateTime @default(now())
  notes Note[]
  user User @relation(fields: [userId], references: [id])
  userId String
}

model CheckPoint {
  id String @default(cuid()) @id
  text String
  checked Boolean
  note Note @relation(fields: [noteId], references: [id])
  noteId String
}

model Paciente {
  id              Int        @id @default(autoincrement())
  nome            String
  cpf             String?
  email           String?
  data_nascimento DateTime? 
  data_cadastro   DateTime?  @default(now())
  peso            Int
  altura          Int
  tipo_sanguineo  String
  status          Int        @default(1)
}
